digraph "RealTimePatternRec.DataLogging.DataLogger.start"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="RealTimePatternRec.DataLogging.\lDataLogger.start",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="starts data grabbing thread"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="RealTimePatternRec.DataLogging.\lDataLogger.thread_loop",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_real_time_pattern_rec_1_1_data_logging_1_1_data_logger.html#ab2cd46788888568fe9a4a5ae1c396f32",tooltip="main loop for logging thread. waits till sample frequency specified delay before grabbing data and wr..."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="RealTimePatternRec.DataLogging.\lDataLogger.tick",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_real_time_pattern_rec_1_1_data_logging_1_1_data_logger.html#a9765476ccd8ca6dcd437a370f32ea3f4",tooltip="updates stopwatch and flips timeflag if enough time has passed to log another value"];
  Node2 -> Node4 [color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="RealTimePatternRec.DataLogging.\lDataLogger.write_data_with\l_timestamp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_real_time_pattern_rec_1_1_data_logging_1_1_data_logger.html#ae49c4de5079f2382e4666d4daacb5ec4",tooltip="writes timestamp before writing data as comma seperated value"];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="RealTimePatternRec.DataLogging.\lDataLogger.write_csv",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_real_time_pattern_rec_1_1_data_logging_1_1_data_logger.html#a5155b6a7e37005050f7d4a1e47643ae7",tooltip="writes data to file as comma seperated values"];
}
